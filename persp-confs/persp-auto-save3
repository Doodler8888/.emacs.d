;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil
	    ((def-buffer "config.org" "/home/wurfkreuz/.emacs.d/config.org" org-mode)
	     (def-buffer "flashcards_bot" "~/.projects/flashcards_bot/" dired-mode)
	     (def-buffer "Main.hs" "/home/wurfkreuz/.projects/flashcards_bot/exe/Main.hs" haskell-mode)
	     (def-buffer "exe" "~/.projects/flashcards_bot/exe/" dired-mode))
	    (def-wconf
	     (((min-height . 4)
	       (min-width . 20)
	       (min-height-ignore . 3)
	       (min-width-ignore . 4)
	       (min-height-safe . 1)
	       (min-width-safe . 4)
	       (min-pixel-height . 92)
	       (min-pixel-width . 200)
	       (min-pixel-height-ignore . 69)
	       (min-pixel-width-ignore . 40)
	       (min-pixel-height-safe . 23)
	       (min-pixel-width-safe . 40))
	      hc
	      (pixel-width . 1880)
	      (pixel-height . 1017)
	      (total-width . 188)
	      (total-height . 44)
	      (normal-height . 1.0)
	      (normal-width . 1.0)
	      (combination-limit)
	      (leaf
	       (pixel-width . 940)
	       (pixel-height . 1017)
	       (total-width . 94)
	       (total-height . 44)
	       (normal-height . 1.0)
	       (normal-width . 0.5)
	       (buffer "Main.hs"
		       (selected)
		       (hscroll . 0)
		       (fringes 0 0 nil nil)
		       (margins nil)
		       (scroll-bars nil 0 t nil 0 t nil)
		       (vscroll . 0)
		       (dedicated)
		       (point . 26)
		       (start . 1)))
	      (leaf
	       (last . t)
	       (pixel-width . 940)
	       (pixel-height . 1017)
	       (total-width . 94)
	       (total-height . 44)
	       (normal-height . 1.0)
	       (normal-width . 0.5)
	       (buffer "config.org"
		       (selected . t)
		       (hscroll . 0)
		       (fringes 0 0 nil nil)
		       (margins nil)
		       (scroll-bars nil 0 t nil 0 t nil)
		       (vscroll . 0)
		       (dedicated)
		       (point . 14121)
		       (start . 13617))
	       (prev-buffers
		("Main.hs" 1 26)
		("exe" 1 276)
		("flashcards_bot" 1 347)
		("config.org" 14610 14974)
		("*scratch*" 1 1)))))
	    (def-params nil)
	    t nil nil))
